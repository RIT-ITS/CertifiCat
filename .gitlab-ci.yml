# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

# container_scanning:
#   variables:
#     DOCKER_IMAGE: ...
#     DOCKER_USER: ...
#     DOCKER_PASSWORD: ...
image: docker:24.0.5
services:
- name: docker:24.0.5-dind
  command:
  - "--tls=false"
  - "--mtu=1440"
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/Container-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- local: ".gitlab-ci.helm.yml"
- template: Auto-DevOps.gitlab-ci.yml
stages:
- build
- security
- test
- package_helm
- upload_helm
variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ''
  IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
  CS_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  CS_SEVERITY_THRESHOLD: High
  GIT_SUBMODULE_STRATEGY: recursive
  SAST_EXCLUDED_ANALYZERS: flawfinder,nodejs-scan,phpcs-security-audit
  GITLAB_ADVANCED_SAST_ENABLED: 'true'
  ADVANCED_SAST_PARTIAL_SCAN: differential
build:
  stage: build
  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  - docker pull $IMAGE_TAG || true
  - scripts/build-image --tag ${CS_IMAGE} --tag ${IMAGE_TAG}
  - docker push $CS_IMAGE
  - docker push $IMAGE_TAG
  rules:
  - if: "$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\..+/"
dependency_scanning:
  before_script:
  - apt update && apt install pkg-config libmariadb-dev -y
container_scanning:
  stage: test
  needs:
  - build
  rules:
  - if: "$CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^\\d+\\.\\d+\\..+/"
    when: always
