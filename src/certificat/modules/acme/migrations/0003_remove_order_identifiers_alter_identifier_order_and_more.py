# Generated by Django 5.1.2 on 2024-10-15 20:43

import acmev2.models.authorization
import acmev2.models.challenge
import certificat.modules.acme.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("acme", "0002_order_identifier"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="order",
            name="identifiers",
        ),
        migrations.AlterField(
            model_name="identifier",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="identifiers",
                to="acme.order",
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="account",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to="acme.account",
            ),
        ),
        migrations.CreateModel(
            name="Authorization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=15, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "pending"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "pending"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "valid"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "valid"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "invalid"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "invalid"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "deactivated"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "deactivated"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "expired"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "expired"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "revoked"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "revoked"
                                ],
                            ),
                        ],
                        max_length=15,
                    ),
                ),
                ("expires", models.DateTimeField()),
                (
                    "identifier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="authorizations",
                        to="acme.identifier",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="authorizations",
                        to="acme.order",
                    ),
                ),
            ],
            bases=(models.Model, certificat.modules.acme.models.TimestampMixin),
        ),
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                acmev2.models.challenge.ChallengeType["none"],
                                acmev2.models.challenge.ChallengeType["none"],
                            ),
                            (
                                acmev2.models.challenge.ChallengeType["custom"],
                                acmev2.models.challenge.ChallengeType["custom"],
                            ),
                            (
                                acmev2.models.challenge.ChallengeType["http_01"],
                                acmev2.models.challenge.ChallengeType["http_01"],
                            ),
                        ],
                        max_length=15,
                    ),
                ),
                ("token", models.CharField(max_length=100)),
                (
                    "authorization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenges",
                        to="acme.authorization",
                    ),
                ),
            ],
            bases=(models.Model, certificat.modules.acme.models.TimestampMixin),
        ),
    ]
