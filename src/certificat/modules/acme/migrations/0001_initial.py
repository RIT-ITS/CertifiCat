# Generated by Django 5.1.2 on 2024-10-30 17:34

import acmev2.models.account
import acmev2.models.authorization
import acmev2.models.challenge
import acmev2.models.identifiers
import acmev2.models.order
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=15, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                acmev2.models.account.AccountStatus["valid"],
                                acmev2.models.account.AccountStatus["valid"],
                            ),
                            (
                                acmev2.models.account.AccountStatus["deactivated"],
                                acmev2.models.account.AccountStatus["deactivated"],
                            ),
                            (
                                acmev2.models.account.AccountStatus["revoked"],
                                acmev2.models.account.AccountStatus["revoked"],
                            ),
                        ],
                        max_length=15,
                    ),
                ),
                ("jwk", models.TextField()),
                ("jwk_thumbprint", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Authorization",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=15, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "pending"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "pending"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "valid"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "valid"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "invalid"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "invalid"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "deactivated"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "deactivated"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "expired"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "expired"
                                ],
                            ),
                            (
                                acmev2.models.authorization.AuthorizationStatus[
                                    "revoked"
                                ],
                                acmev2.models.authorization.AuthorizationStatus[
                                    "revoked"
                                ],
                            ),
                        ],
                        max_length=15,
                    ),
                ),
                ("expires", models.DateTimeField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Identifier",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                acmev2.models.identifiers.IdentifierType["dns"],
                                acmev2.models.identifiers.IdentifierType["dns"],
                            )
                        ],
                        max_length=15,
                    ),
                ),
                ("value", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AccountBinding",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("hmac_id", models.CharField(max_length=255, unique=True)),
                ("hmac_key", models.CharField(max_length=255)),
                ("bound_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("note", models.TextField(null=True)),
                (
                    "bound_to",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="binding",
                        to="acme.account",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AccountBindingGroupScope",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "binding",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_scopes",
                        to="acme.accountbinding",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Challenge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=15, unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                acmev2.models.challenge.ChallengeType["none"],
                                acmev2.models.challenge.ChallengeType["none"],
                            ),
                            (
                                acmev2.models.challenge.ChallengeType["custom"],
                                acmev2.models.challenge.ChallengeType["custom"],
                            ),
                            (
                                acmev2.models.challenge.ChallengeType["http_01"],
                                acmev2.models.challenge.ChallengeType["http_01"],
                            ),
                        ],
                        max_length=15,
                    ),
                ),
                ("token", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                acmev2.models.challenge.ChallengeStatus["pending"],
                                acmev2.models.challenge.ChallengeStatus["pending"],
                            ),
                            (
                                acmev2.models.challenge.ChallengeStatus["valid"],
                                acmev2.models.challenge.ChallengeStatus["valid"],
                            ),
                            (
                                acmev2.models.challenge.ChallengeStatus["invalid"],
                                acmev2.models.challenge.ChallengeStatus["invalid"],
                            ),
                            (
                                acmev2.models.challenge.ChallengeStatus["processing"],
                                acmev2.models.challenge.ChallengeStatus["processing"],
                            ),
                        ],
                        max_length=15,
                    ),
                ),
                ("validated", models.DateTimeField(null=True)),
                (
                    "authorization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenges",
                        to="acme.authorization",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChallengeError",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("error", models.TextField()),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="acme.challenge"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="authorization",
            name="identifier",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="authorizations",
                to="acme.identifier",
            ),
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=15, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (
                                acmev2.models.order.OrderStatus["pending"],
                                acmev2.models.order.OrderStatus["pending"],
                            ),
                            (
                                acmev2.models.order.OrderStatus["ready"],
                                acmev2.models.order.OrderStatus["ready"],
                            ),
                            (
                                acmev2.models.order.OrderStatus["processing"],
                                acmev2.models.order.OrderStatus["processing"],
                            ),
                            (
                                acmev2.models.order.OrderStatus["valid"],
                                acmev2.models.order.OrderStatus["valid"],
                            ),
                            (
                                acmev2.models.order.OrderStatus["invalid"],
                                acmev2.models.order.OrderStatus["invalid"],
                            ),
                        ],
                        max_length=15,
                    ),
                ),
                ("expires", models.DateTimeField()),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="acme.account",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="identifier",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="identifiers",
                to="acme.order",
            ),
        ),
        migrations.CreateModel(
            name="CertificateRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("csr", models.TextField()),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="acme.order"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("chain", models.TextField()),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="acme.order"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="authorization",
            name="order",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="authorizations",
                to="acme.order",
            ),
        ),
        migrations.CreateModel(
            name="OrderFinalizationError",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("error", models.TextField()),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="acme.order"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SectigoOrderProcessingState",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("ssl_id", models.CharField(max_length=50, null=True)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("SU", "Submitted"),
                            ("EN", "Enrolled"),
                            ("AP", "Approved"),
                            ("CO", "Collected"),
                        ],
                        default="SU",
                        max_length=2,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="acme.order"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
